<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.petshop.dao.IPetMapper">
  <resultMap id="BaseResultMap" type="com.petshop.model.Pet">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="typeName" jdbcType="VARCHAR" property="typename" />
    <result column="health" jdbcType="INTEGER" property="health" />
    <result column="love" jdbcType="INTEGER" property="love" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="ownerId" jdbcType="INTEGER" property="ownerId" />
    <result column="storeId" jdbcType="INTEGER" property="storeId" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, typeName, health, love, birthday, ownerId, storeId, price, photo
  </sql>
  <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pts_pet
    where id = #{id}
  </select>
  <select id="getAll" resultMap="BaseResultMap">
    select * from pts_pet
  </select>
  <!-- 根据分页数据start 和size查询数据 -->
    <select id="findByPage" parameterType="Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from pts_pet
        <if test="start!=null and size!=null">
            limit #{start},#{size}
        </if>
    </select>
  
  <select id="selectBystore_Id" parameterType="int" resultMap="BaseResultMap">
     select * from pts_pet where storeId = #{storeId}
  </select>
  <select id="getPager" parameterType="hashmap" resultMap="BaseResultMap">
    select * from pts_pet limit #{pageOffset},#{pageSize}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pts_pet
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.petshop.model.Pet">
    insert into pts_pet (id, name, typeName, 
      health, love, birthday, 
      ownerId, storeId, price, 
      photo)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{typename,jdbcType=VARCHAR}, 
      #{health,jdbcType=INTEGER}, #{love,jdbcType=INTEGER}, #{birthday,jdbcType=VARCHAR}, 
      #{ownerId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, 
      #{photo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.petshop.model.Pet">
    insert into pts_pet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="typename != null">
        typeName,
      </if>
      <if test="health != null">
        health,
      </if>
      <if test="love != null">
        love,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="ownerId != null">
        ownerId,
      </if>
      <if test="storeId != null">
        storeId,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="photo != null">
        photo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="typename != null">
        #{typename,jdbcType=VARCHAR},
      </if>
      <if test="health != null">
        #{health,jdbcType=INTEGER},
      </if>
      <if test="love != null">
        #{love,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.petshop.model.Pet">
    update pts_pet
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="typename != null">
        typeName = #{typename,jdbcType=VARCHAR},
      </if>
      <if test="health != null">
        health = #{health,jdbcType=INTEGER},
      </if>
      <if test="love != null">
        love = #{love,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        ownerId = #{ownerId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        storeId = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.petshop.model.Pet">
    update pts_pet
    set name = #{name,jdbcType=VARCHAR},
      typeName = #{typename,jdbcType=VARCHAR},
      health = #{health,jdbcType=INTEGER},
      love = #{love,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=VARCHAR},
      ownerId = #{ownerId,jdbcType=INTEGER},
      storeId = #{storeId,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      photo = #{photo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>